<?php

/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.
 *
 * http://www.ec-cube.co.jp/
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Eccube\Repository;

use Doctrine\ORM\QueryBuilder;
use Doctrine\Persistence\ManagerRegistry as RegistryInterface;
use Eccube\Entity\Shipping;
use Eccube\Util\StringUtil;

/**
 * ShippingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ShippingRepository extends AbstractRepository
{
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, Shipping::class);
    }


    /**
     * 同一商品のお届け先情報を取得
     *
     * @param \Eccube\Entity\Order|null $Order
     * @param \Eccube\Entity\ProductClass|null $productClass
     *
     * @return array<string, mixed>
     */
    public function findShippingsProduct($Order, $productClass)
    {
        $shippings = $this->createQueryBuilder('s')
            ->innerJoin('Eccube\Entity\OrderItem', 'si', 'WITH', 'si.Shipping = s.id')
            ->where('si.Order = (:order)')
            ->andWhere('si.ProductClass = (:productClass)')
            ->setParameter('order', $Order)
            ->setParameter('productClass', $productClass)
            ->getQuery()
            ->getResult();

        return $shippings;
    }
}
